parameters {		
		string(name: 'version', defaultValue: '19.9.0', description: 'version of sdk')	
		string(name: 'StartFromStep', defaultValue: '0', description: 'start step')	
		string(name: 'testServerUrl', defaultValue: 'https://api-qa.aspose.cloud', description: 'server url')		
}
node('words-linux') {         
    try {
       stage('0:checkout'){
		if (params.StartFromStep.toInteger() < 1) {
        checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-java.git']]])
           withCredentials([usernamePassword(credentialsId: '6839cbe8-39fa-40c0-86ce-90706f0bae5d', passwordVariable: 'AppKey', usernameVariable: 'AppSid')]) {
			  sh 'git checkout release'
              sh 'mkdir -p Settings'
              sh 'echo "{\\"AppSid\\": \\"$AppSid\\",\\"AppKey\\": \\"$AppKey\\", \\"BaseUrl\\": \\"https://auckland-words-cloud-staging.dynabic.com\\"}" > Settings/servercreds.json'
			  sh "git config user.email \"jenkins.aspose@gmail.com\""
			  sh "git config user.name \"jenkins\""
           }
		   	withCredentials([usernamePassword(credentialsId: 'f0c4f9b6-8ffe-4ea8-8981-e99263fdb788', passwordVariable: 'mavenPass', usernameVariable: 'mavenUser')]) {
					sh 'echo "<settings xmlns=\\"http://maven.apache.org/SETTINGS/1.0.0\\" \\n xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" \\n xsi:schemaLocation=\\"http://maven.apache.org/SETTINGS/1.0.0\\"> \\n<servers> \\n <server> \\n<id>aspose</id>\\n<username>${mavenUser}</username>\\n<password>${mavenPass}</password>\\n</server>\\n</servers>\\n</settings>" > wordsSettings.xml'
				}
			}
		}
	   
	   stage('1:release'){
		if (params.StartFromStep.toInteger() < 2) {
			withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
					docker.image('maven:3.6.2-jdk-8').inside{
						stage('deploy'){
							withCredentials([usernamePassword(credentialsId: '6839cbe8-39fa-40c0-86ce-90706f0bae5d', passwordVariable: 'AppKey', usernameVariable: 'AppSid')]) {
								sh 'mkdir -p Settings'
								sh 'echo "{\\"AppSid\\": \\"$AppSid\\",\\"AppKey\\": \\"$AppKey\\", \\"BaseUrl\\": \\"$testServerUrl\\"}" > Settings/servercreds.json'
							}
							sh 'cat wordsSettings.xml'
							sh "mvn --settings wordsSettings.xml deploy -DcheckModificationExcludeList=wordsSettings.xml,Settings/servercreds.json"							
						}
					}
				}
			}
	   }

		stage('2:add version tag'){
			if (params.StartFromStep.toInteger() < 3) {
				checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-java.git']]])
						
				sh "git config user.email \"jenkins.aspose@gmail.com\""
				sh "git config user.name \"jenkins\""
				sh "git tag -a ${version} -m 'version ${version}' | exit 0"
				
				withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
					sh "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-java.git ${version}"
				}
			}
		}           
		    			                
    } finally {                       
        deleteDir()
    }
}   